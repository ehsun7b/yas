package vida.phd.yas.malware;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import vida.phd.yas.Utils;
import vida.phd.yas.database.entity.BasicBlock;

public class MalwareReader {

  private File file;
  private List<BasicBlock> basicBlocks;

  public MalwareReader() {
    basicBlocks = new ArrayList<>();
  }

  public MalwareReader(File file) {
    this();
    this.file = file;
  }    
  
  public List<BasicBlock> read() throws IOException {
    try(BufferedReader br = new BufferedReader(new FileReader(file))) {
      String line;
      while((line = br.readLine()) != null) {
        line = line.trim();
        if (line.length() > 0) {
          add(line);
        }
      }
    }
    
    return this.basicBlocks;
  }

  private void add(String hash) {
    boolean found = false;
    for (BasicBlock basicBlock : basicBlocks) {
      if (basicBlock.getHash().equals(hash)) {
        basicBlock.setCount(basicBlock.getCount() + 1);
        found = true;
        System.out.println(MessageFormat.format("Basic block added: {0} - frequency: {1}", Utils.shortenHash(basicBlock.getHash()), basicBlock.getCount()));
      }
    }
    
    if (!found) {
      BasicBlock basicBlock = new BasicBlock();
      basicBlock.setHash(hash);
      basicBlock.setCount(1);
      basicBlocks.add(basicBlock);
      System.out.println(MessageFormat.format("Basic block added: {0} - frequency: 1", Utils.shortenHash(basicBlock.getHash())));
    }
  }
 
  public static void main(String[] args) throws IOException {
    MalwareReader malwareReader = new MalwareReader(new File("D:\\Dropbox\\Yas-distros\\fam01\\instruction_malware.exe.txt"));
    List<BasicBlock> bbs = malwareReader.read();
    System.out.println("bbs: " + bbs.size());
  }
}
